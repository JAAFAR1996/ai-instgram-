services:
  - type: web
    name: ai-sales-api
    runtime: node
    plan: standard
    repo: https://github.com/YOUR_USERNAME/YOUR_REPO
    branch: main
    buildCommand: npm ci && npm run build
    startCommand: node dist/production-index.js
    healthCheckPath: /webhooks/health
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: production
      - key: OPENAI_API_KEY
        sync: true
      - key: META_APP_SECRET
        sync: true
      - key: IG_VERIFY_TOKEN
        sync: true
      - key: MANYCHAT_BEARER
        sync: true
      - key: MANYCHAT_WEBHOOK_SECRET
        sync: true
      - key: ENCRYPTION_KEY_HEX
        sync: true
      - key: JWT_SECRET
        sync: true
      - key: DATABASE_URL
        fromService:
          name: postgres-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: redis-cache
          property: connectionString

  - type: worker
    name: ai-sales-worker
    runtime: node
    plan: standard
    repo: https://github.com/YOUR_USERNAME/YOUR_REPO
    branch: main
    buildCommand: npm ci && npm run build
    startCommand: node dist/worker-index.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: OPENAI_API_KEY
        sync: true
      - key: DATABASE_URL
        fromService:
          name: postgres-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: redis-cache
          property: connectionString

  - type: cron
    name: cleanup-cron
    runtime: node
    plan: standard
    repo: https://github.com/YOUR_USERNAME/YOUR_REPO
    branch: main
    buildCommand: npm ci && npm run build
    startCommand: node dist/cron-index.js
    schedule: '0 3 * * *'
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromService:
          name: postgres-db
          property: connectionString

databases:
  - name: postgres-db
    plan: starter
    region: oregon
    databaseName: ai_sales
    user: ai_sales_user
  - name: redis-cache
    plan: starter
    region: oregon

persistentDisks:
  - name: uploads
    sizeGB: 5
    mountPath: /data/uploads
