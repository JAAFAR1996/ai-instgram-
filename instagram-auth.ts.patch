--- /mnt/data/work/src4/src/api/instagram-auth.ts
+++ /mnt/data/work/src4/src/api/instagram-auth.ts
@@ -11,6 +11,7 @@
 import { getDatabase } from '../db/adapter.js';
 import { z } from 'zod';
 import { getConfig } from '../config/index.js';
+import { logger } from '../services/logger.js';
 
 const config = getConfig();
 
@@ -82,7 +83,7 @@
         redirectUri: redirectUrl || oauthService.getConfig().instagram.redirectUri
       });
       
-      console.log('🔗 Instagram OAuth initiated for merchant:', merchantId);
+      logger.info('🔗 Instagram OAuth initiated for merchant:', merchantId);
       
       return c.json({
         success: true,
@@ -165,11 +166,11 @@
     const { merchantId, codeVerifier } = oauthSession;
     
     // تبديل code بـ access token with PKCE verification (2025)
-    console.log('🔄 Exchanging code for token with PKCE verification...');
+    logger.info('🔄 Exchanging code for token with PKCE verification...');
     const tokenData = await oauthService.exchangeCodeForToken(code, merchantId, codeVerifier, state);
     
     // التحقق من permissions
-    console.log('🔍 Verifying permissions...');
+    logger.info('🔍 Verifying permissions...');
     const permissions = await oauthService.verifyPermissions(tokenData.longLivedToken);
     
     if (!permissions.hasMessageAccess) {
@@ -195,14 +196,14 @@
     }
     
     // الحصول على معلومات Business Account
-    console.log('📱 Fetching Instagram Business Account info...');
+    logger.info('📱 Fetching Instagram Business Account info...');
     const businessAccountInfo = await oauthService.getBusinessAccountInfo(tokenData.longLivedToken);
     
     // الحصول على معلومات المستخدم
     const userProfile = await oauthService.getUserProfile(tokenData.longLivedToken);
     
     // حفظ البيانات في قاعدة البيانات
-    console.log('💾 Saving credentials...');
+    logger.info('💾 Saving credentials...');
     await oauthService.storeTokens(merchantId, tokenData, userProfile);
     
     // إرجاع النتيجة الناجحة
@@ -366,7 +367,7 @@
       }, 404);
     }
     
-    console.log(`🔌 Instagram disconnected for merchant ${merchantId}`);
+    logger.info(`🔌 Instagram disconnected for merchant ${merchantId}`);
     
     return c.json({
       success: true,
